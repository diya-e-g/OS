#include <stdio.h>
#define max 30

int main()
{
    int i, j, n, temp;
    int wt[max], bt[max], at[max], tat[max], prio[max], p[max], ct[max];
    float atat = 0, awt = 0;

    printf("Enter the number of processes: ");
    scanf("%d", &n);

    printf("Enter the burst time for each process:\n");
    for(i = 0; i < n; i++)
    {
        scanf("%d", &bt[i]);
        p[i] = i + 1;
    }

    printf("Enter the arrival time for each process:\n");
    for(i = 0; i < n; i++)
    {
        scanf("%d", &at[i]);
    }

    printf("Enter the priority for each process:\n");
    for(i = 0; i < n; i++)
    {
        scanf("%d", &prio[i]);
    }

    int completed = 0, currentTime = 0, minIndex;
    int completedProcesses[max] = {0};

    while(completed != n) {
        int minPriority = 99999;
        minIndex = -1;

        for(i = 0; i < n; i++) {
            if(at[i] <= currentTime && completedProcesses[i] == 0 && prio[i] < minPriority) {
                minPriority = prio[i];
                minIndex = i;
            }
        }

        if(minIndex == -1) {
            currentTime++;
            continue;
        }

        currentTime += bt[minIndex];
        ct[minIndex] = currentTime;
        tat[minIndex] = ct[minIndex] - at[minIndex];
        wt[minIndex] = tat[minIndex] - bt[minIndex];

        completedProcesses[minIndex] = 1;
        completed++;
    }

    printf("Process\tPriority\tBurst time\tArrival time\tWaiting time\tTurnaround time\n");
    for(i = 0; i < n; i++) {
        printf("%d\t%d\t\t%d\t\t%d\t\t%d\t\t%d\n", p[i], prio[i], bt[i], at[i], wt[i], tat[i]);
        awt += wt[i];
        atat += tat[i];
    }

    awt = awt / n;
    atat = atat / n;
    printf("Average waiting time is: %f\n", awt);
    printf("Average turnaround time is: %f\n", atat);

    return 0;
}
